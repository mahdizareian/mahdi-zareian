from decimal import *
from pyspark.sql.types import *
from pyspark.sql import functions as F
from pyspark.sql import *

part = sqlContext.read.parquet("hdfs://namenode:8020/mahdi-parquet-data/part.parquet")
supplier = sqlContext.read.parquet("hdfs://namenode:8020/mahdi-parquet-data/supplier.parquet")
partsupp = sqlContext.read.parquet("hdfs://namenode:8020/mahdi-parquet-data/partsupp.parquet")
nation = sqlContext.read.parquet("hdfs://namenode:8020/mahdi-parquet-data/nation.parquet")
region = sqlContext.read.parquet("hdfs://namenode:8020/mahdi-parquet-data/region.parquet")

selin = region.filter( region.R_NAME == "ASIA")\
.join(supplier , partsupp.PS_SUPPKEY == supplier.S_SUPPKEY )\
.join(supplier, nation.N_NATIONKEY == supplier.S_NATIONKEY)\
.join(part, partsupp.PS_PARTKEY == part.P_PARTKEY)\
.join(nation, region.R_REGIONKEY == nation.N_REGIONKEY)\
.select(partsupp.PS_SUPPLYCOST)\
.agg(F.min(partsupp.PS_SUPPLYCOST).alias("mincost"))



query2 = part.filter((part.P_SIZE ==25) & (part.P_TYPE.like('%steel')))
       .join(part, partsupp.PS_PARTKEY == part.P_PARTKEY)\
       .join(supplier, partsupp.PS_SUPPKEY == supplier.S_SUPPKEY)\
       .join(supplier, nation.N_NATIONKEY == supplier.S_NATIONKEY)\
       .join(nation, region.R_REGIONKEY == nation.N_REGIONKEY)\
       .join(partsupp , selin.mincost == partsupp.PS_SUPPLYCOST )\
	   .select(supplier.S_ACCTBAL , supplier.S_NAME , nation.N_NAME , part.P_PARTKEY , part.P_MFGR , supplier.S_ADDRESS , supplier.S_PHONE , supplier.S_COMMENT )\
       .orderBy(supplier.S_ACCTBAL , ascending=False)
       .orderBy(nation.N_NAME , supplier.S_NAME , part.P_PARTKEY)\









